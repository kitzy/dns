name: Terraform Apply for DNS Zones

on:
  push:
    branches:
      - main
    paths:
      - 'dns_zones/**'
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y python3-yaml
  
      - name: Install yq
        run: |
            wget https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 -O /tmp/yq
            chmod +x /tmp/yq
            mv /tmp/yq /usr/local/bin/yq

      - name: Combine individual YAML files into master YAML
        run: |
            # Initialize an empty combined file
            echo "[]" > ./combined_zones.yml
            # Merge all YAML files into one, ensuring correct format (merging lists)
            for file in ./dns_zones/*.yml; do
              yq eval-all 'select(fileIndex == 0) + select(fileIndex == 1)' ./combined_zones.yml "$file" > temp_combined.yml && mv temp_combined.yml ./combined_zones.yml
            done

      - name: Debug combined zones
        run: |
            cat ./combined_zones.yml

      - name: Fetch Hosted Zone IDs
        run: |
          echo "ZONE_IDS={}" > zone_ids.json  # Initialize an empty JSON object
          for file in ./dns_zones/*.yml; do
            zone_name=$(yq e '.zone_name' "$file")
            zone_id=$(aws route53 list-hosted-zones-by-name --dns-name "$zone_name" --query "HostedZones[0].Id" --output text | sed 's|/hostedzone/||')
            echo "Fetching hosted zone ID for $zone_name: $zone_id"
            yq e ". + {\"$zone_name\": \"$zone_id\"}" -i zone_ids.json
          done

      - name: Fetch Existing DNS Records
        run: |
            jq -r 'to_entries | .[] | "\(.key) \(.value)"' zone_ids.json | while read zone_name zone_id; do
              echo "Fetching existing records for $zone_name ($zone_id)"
              aws route53 list-resource-record-sets --hosted-zone-id "$zone_id" > "existing_records_${zone_name}.json"
            done
  
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
