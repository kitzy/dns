name: Cleanup stray DNS records

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode (show what would be deleted without deleting)'
        required: false
        type: boolean
        default: true
      debug:
        description: 'Enable debug output'
        required: false
        type: boolean
        default: false

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install boto3 pyyaml requests
      
      - name: Set run mode
        id: mode
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "dry_run=${{ github.event.inputs.dry_run }}" >> $GITHUB_OUTPUT
            echo "debug=${{ github.event.inputs.debug }}" >> $GITHUB_OUTPUT
          else
            # Scheduled runs are not dry-run by default
            echo "dry_run=false" >> $GITHUB_OUTPUT
            echo "debug=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Cleanup Route53
        run: python scripts/cleanup_route53.py
        if: steps.mode.outputs.dry_run == 'false'
      
      - name: Cleanup Cloudflare
        run: |
          if [ "${{ steps.mode.outputs.dry_run }}" = "true" ]; then
            echo "Running in DRY-RUN mode"
            python scripts/cleanup_cloudflare.py --dry-run ${{ steps.mode.outputs.debug == 'true' && '--debug' || '' }}
          else
            python scripts/cleanup_cloudflare.py ${{ steps.mode.outputs.debug == 'true' && '--debug' || '' }}
          fi
